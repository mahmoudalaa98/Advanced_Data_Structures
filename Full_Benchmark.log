nohup: ignoring input

======================================================================
 FULL PERFORMANCE BENCHMARK
======================================================================

  WARNING: This will take 10-20 minutes!
======================================================================
\n======================================================================
COMPREHENSIVE PERFORMANCE BENCHMARK
======================================================================
\nTesting: Trie, Fenwick Tree, and Skip List
Dataset sizes: 1K to 10M elements
  This will take 80 minutes!
======================================================================
\n======================================================================
[1/9] Testing with 1,000 elements...
======================================================================
\n[1/3] Trie (Prefix Tree)...
  Insert: 0.0035s | Search: 0.0000s
\n[2/3] Fenwick Tree (Binary Indexed Tree)...
  Build: 0.0000s | Query: 0.0025s
\n[3/3] Skip List...
  Insert: 0.0030s | Search: 0.0020s
\n======================================================================
[2/9] Testing with 5,000 elements...
======================================================================
\n[1/3] Trie (Prefix Tree)...
  Insert: 0.0143s | Search: 0.0010s
\n[2/3] Fenwick Tree (Binary Indexed Tree)...
  Build: 0.0046s | Query: 0.0071s
\n[3/3] Skip List...
  Insert: 0.0180s | Search: 0.0020s
\n======================================================================
[3/9] Testing with 10,000 elements...
======================================================================
\n[1/3] Trie (Prefix Tree)...
  Insert: 0.0435s | Search: 0.0010s
\n[2/3] Fenwick Tree (Binary Indexed Tree)...
  Build: 0.0116s | Query: 0.0134s
\n[3/3] Skip List...
  Insert: 0.0651s | Search: 0.0024s
\n======================================================================
[4/9] Testing with 50,000 elements...
======================================================================
\n[1/3] Trie (Prefix Tree)...
  Insert: 0.3826s | Search: 0.0020s
\n[2/3] Fenwick Tree (Binary Indexed Tree)...
  Build: 0.0871s | Query: 0.0279s
\n[3/3] Skip List...
  Insert: 0.3821s | Search: 0.0064s
\n======================================================================
[5/9] Testing with 100,000 elements...
======================================================================
\n[1/3] Trie (Prefix Tree)...
  Insert: 0.9597s | Search: 0.0015s
\n[2/3] Fenwick Tree (Binary Indexed Tree)...
  Build: 0.1313s | Query: 0.0209s
\n[3/3] Skip List...
  Insert: 1.3254s | Search: 0.0051s
\n======================================================================
[6/9] Testing with 500,000 elements...
======================================================================
\n[1/3] Trie (Prefix Tree)...
  Insert: 4.9724s | Search: 0.0030s
\n[2/3] Fenwick Tree (Binary Indexed Tree)...
  Build: 0.7394s | Query: 0.0256s
\n[3/3] Skip List...
  Insert: 6.4224s | Search: 0.0080s
\n======================================================================
[7/9] Testing with 1,000,000 elements...
======================================================================
\n[1/3] Trie (Prefix Tree)...
  Insert: 13.5267s | Search: 0.0025s
\n[2/3] Fenwick Tree (Binary Indexed Tree)...
  Build: 1.9920s | Query: 0.0258s
\n[3/3] Skip List...
  Insert: 18.1576s | Search: 0.0190s
\n======================================================================
[8/9] Testing with 5,000,000 elements...
======================================================================
\n[1/3] Trie (Prefix Tree)...
  Insert: 70.0414s | Search: 0.0032s
\n[2/3] Fenwick Tree (Binary Indexed Tree)...
  Build: 9.6266s | Query: 0.0365s
\n[3/3] Skip List...
  Insert: 255.6900s | Search: 0.0174s
\n======================================================================
[9/9] Testing with 10,000,000 elements...
======================================================================
\n[1/3] Trie (Prefix Tree)...
  Insert: 1486.9521s | Search: 0.5061s
\n[2/3] Fenwick Tree (Binary Indexed Tree)...
  Build: 17.7836s | Query: 0.0313s
\n[3/3] Skip List...
  Insert: 700.1265s | Search: 0.0312s
\n======================================================================
GENERATING PLOTS
======================================================================
\n Performance plots saved to 'results/plots/performance_comparison.png'
 Comparison plots saved to 'results/plots/comparison_summary.png'
\n==========================================================================================
PERFORMANCE SUMMARY TABLE
==========================================================================================
\nSize         Data Structure  Insert/Build    Search/Query   
------------------------------------------------------------------------------------------
1,000        Trie            0.0035          0.0000         
             Fenwick Tree    0.0000          0.0025         
             Skip List       0.0030          0.0020         

5,000        Trie            0.0143          0.0010         
             Fenwick Tree    0.0046          0.0071         
             Skip List       0.0180          0.0020         

10,000       Trie            0.0435          0.0010         
             Fenwick Tree    0.0116          0.0134         
             Skip List       0.0651          0.0024         

50,000       Trie            0.3826          0.0020         
             Fenwick Tree    0.0871          0.0279         
             Skip List       0.3821          0.0064         

100,000      Trie            0.9597          0.0015         
             Fenwick Tree    0.1313          0.0209         
             Skip List       1.3254          0.0051         

500,000      Trie            4.9724          0.0030         
             Fenwick Tree    0.7394          0.0256         
             Skip List       6.4224          0.0080         

1,000,000    Trie            13.5267         0.0025         
             Fenwick Tree    1.9920          0.0258         
             Skip List       18.1576         0.0190         

5,000,000    Trie            70.0414         0.0032         
             Fenwick Tree    9.6266          0.0365         
             Skip List       255.6900        0.0174         

10,000,000   Trie            1486.9521       0.5061         
             Fenwick Tree    17.7836         0.0313         
             Skip List       700.1265        0.0312         


==========================================================================================
THEORETICAL COMPLEXITY ANALYSIS
==========================================================================================

TRIE (PREFIX TREE):
------------------
Time Complexity:
  • Insert: O(m) where m = word length
  • Search: O(m) where m = word length
  • Prefix Search: O(p) where p = prefix length
  • Delete: O(m) where m = word length

Space Complexity: O(ALPHABET_SIZE x N x M) = O(total characters)

FENWICK TREE (BINARY INDEXED TREE):
-----------------------------------
Time Complexity:
  • Update: O(log n)
  • Prefix Sum Query: O(log n)
  • Range Sum Query: O(log n)
  • Build: O(n log n)

Space Complexity: O(n)

SKIP LIST:
----------
Time Complexity:
  • Insert: O(log n) average, O(n) worst case
  • Search: O(log n) average, O(n) worst case
  • Delete: O(log n) average, O(n) worst case

Space Complexity: O(n) expected, O(n log n) worst case

\n======================================================================
 FULL BENCHMARK COMPLETE!
======================================================================
